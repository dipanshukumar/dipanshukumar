@import '../base/variables';

// Glass effect mixin
@mixin glass-effect($bg: $glass-bg, $border: $glass-border) {
  background: $bg;
  backdrop-filter: blur(20px);
  border: 1px solid $border;
}

// Gradient text mixin
@mixin gradient-text($gradient: $primary-gradient) {
  background: $gradient;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

// Flex center mixin
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

// Button base mixin
@mixin button-base {
  padding: 0.75rem 1.5rem;
  border: none;
  border-radius: $border-radius-md;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  transition: all $transition-normal;
  text-decoration: none;
  display: inline-flex;
  align-items: center;
  gap: $spacing-sm;
}

// Shimmer effect mixin
@mixin shimmer-effect {
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
    transition: left $transition-slow;
  }
  
  &:hover::before {
    left: 100%;
  }
}

// Responsive mixin
@mixin responsive($breakpoint) {
  @if $breakpoint == sm {
    @media (max-width: $breakpoint-sm) { @content; }
  } @else if $breakpoint == md {
    @media (max-width: $breakpoint-md) { @content; }
  } @else if $breakpoint == lg {
    @media (max-width: $breakpoint-lg) { @content; }
  } @else if $breakpoint == xl {
    @media (max-width: $breakpoint-xl) { @content; }
  }
}
